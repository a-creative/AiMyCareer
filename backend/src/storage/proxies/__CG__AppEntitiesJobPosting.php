<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class JobPosting extends \App\Entities\JobPosting implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'jobTitle', 'employer', 'extLink', 'createdTime', 'updatedTime', 'postedDate', 'appliedDate', 'deadlineDate', 'earliestFeedbackDate', 'earliestStartingDate', 'locationPostalCode', 'locationCity', 'contactName', 'contactJobTitle', 'contactDetails', 'contentRaw', 'ownerUser'];
        }

        return ['__isInitialized__', 'id', 'jobTitle', 'employer', 'extLink', 'createdTime', 'updatedTime', 'postedDate', 'appliedDate', 'deadlineDate', 'earliestFeedbackDate', 'earliestStartingDate', 'locationPostalCode', 'locationCity', 'contactName', 'contactJobTitle', 'contactDetails', 'contentRaw', 'ownerUser'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (JobPosting $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getJobTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobTitle', []);

        return parent::getJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployer', []);

        return parent::getEmployer();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtLink', []);

        return parent::getExtLink();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedTime', []);

        return parent::getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedTime($createdTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTime', [$createdTime]);

        return parent::setCreatedTime($createdTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedTime', []);

        return parent::getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedTime($updatedTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedTime', [$updatedTime]);

        return parent::setUpdatedTime($updatedTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostedDate', []);

        return parent::getPostedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostedDate($postedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostedDate', [$postedDate]);

        return parent::setPostedDate($postedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeadlineDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeadlineDate', []);

        return parent::getDeadlineDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeadlineDate($deadlineDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeadlineDate', [$deadlineDate]);

        return parent::setDeadlineDate($deadlineDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationPostalCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationPostalCode', []);

        return parent::getLocationPostalCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationPostalCode($locationPostalCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationPostalCode', [$locationPostalCode]);

        return parent::setLocationPostalCode($locationPostalCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactName', []);

        return parent::getContactName();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactName($contactName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactName', [$contactName]);

        return parent::setContactName($contactName);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactJobTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactJobTitle', []);

        return parent::getContactJobTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactJobTitle($contact_job_title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactJobTitle', [$contact_job_title]);

        return parent::setContactJobTitle($contact_job_title);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactDetails', []);

        return parent::getContactDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactDetails($contactDetails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactDetails', [$contactDetails]);

        return parent::setContactDetails($contactDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getContentRaw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentRaw', []);

        return parent::getContentRaw();
    }

    /**
     * {@inheritDoc}
     */
    public function setContentRaw($contentRaw)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContentRaw', [$contentRaw]);

        return parent::setContentRaw($contentRaw);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationCity', []);

        return parent::getLocationCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationCity($locationCity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationCity', [$locationCity]);

        return parent::setLocationCity($locationCity);
    }

    /**
     * {@inheritDoc}
     */
    public function setJobTitle($jobTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobTitle', [$jobTitle]);

        return parent::setJobTitle($jobTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployer($employer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployer', [$employer]);

        return parent::setEmployer($employer);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtLink($extLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtLink', [$extLink]);

        return parent::setExtLink($extLink);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerUser', []);

        return parent::getOwnerUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerUser(\App\Entities\User $ownerUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerUser', [$ownerUser]);

        return parent::setOwnerUser($ownerUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getEarliestFeedbackDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEarliestFeedbackDate', []);

        return parent::getEarliestFeedbackDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEarliestFeedbackDate($earliestFeedbackDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEarliestFeedbackDate', [$earliestFeedbackDate]);

        return parent::setEarliestFeedbackDate($earliestFeedbackDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEarliestStartingDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEarliestStartingDate', []);

        return parent::getEarliestStartingDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEarliestStartingDate($earliestStartingDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEarliestStartingDate', [$earliestStartingDate]);

        return parent::setEarliestStartingDate($earliestStartingDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppliedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppliedDate', []);

        return parent::getAppliedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppliedDate($appliedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppliedDate', [$appliedDate]);

        return parent::setAppliedDate($appliedDate);
    }

}
